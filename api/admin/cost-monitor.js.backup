// REST API版 api/admin/cost-monitor.js（@upstash/redis不要）
export default async function handler(req, res) {
  const adminKey = req.headers['x-admin-key'];

  if (adminKey !== process.env.ADMIN_KEY) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  try {
    // REST API設定チェック
    if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {
      return res.status(500).json({
        error: 'KV REST API configuration missing',
        debug: {
          kv_url: !!process.env.KV_REST_API_URL,
          kv_token: !!process.env.KV_REST_API_TOKEN
        }
      });
    }

    const today = new Date().toISOString().split('T')[0];

    // REST APIでRedisデータ取得
    const dailyCost = await getKVValue(`daily_cost:${today}`) || 0;
    const totalUsers = await getKVValue(`daily_users:${today}`) || 0;
    const totalGenerations = await getKVValue(`daily_generations:${today}`) || 0;

    // アラート判定
    const costLimit = parseFloat(process.env.DAILY_COST_LIMIT) || 10;
    const alertThreshold = costLimit * 0.8;

    return res.json({
      date: today,
      cost: {
        current: parseFloat(dailyCost).toFixed(4),
        limit: costLimit,
        percentage: (parseFloat(dailyCost) / costLimit * 100).toFixed(1),
        alert: parseFloat(dailyCost) > alertThreshold
      },
      usage: {
        total_users: parseInt(totalUsers),
        total_generations: parseInt(totalGenerations),
        avg_cost_per_generation: totalGenerations > 0
          ? (parseFloat(dailyCost) / parseInt(totalGenerations)).toFixed(6)
          : 0
      },
      status: parseFloat(dailyCost) > costLimit ? 'LIMIT_EXCEEDED' : 'OK'
    });

  } catch (error) {
    console.error('Cost monitor error:', error);
    return res.status(500).json({
      error: 'Monitor error',
      debug: error.message
    });
  }
}

// KV REST API ヘルパー関数
async function getKVValue(key) {
  try {
    const response = await fetch(`${process.env.KV_REST_API_URL}/get/${key}`, {
      headers: {
        'Authorization': `Bearer ${process.env.KV_REST_API_TOKEN}`,
      },
    });

    if (!response.ok) {
      if (response.status === 404) return null;
      throw new Error(`KV API error: ${response.status}`);
    }

    const data = await response.json();
    return data.result;
  } catch (error) {
    console.error('KV get error:', error);
    return null;
  }
}