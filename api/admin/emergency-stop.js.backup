// REST API版 api/admin/emergency-stop.js（@upstash/redis不要）
export default async function handler(req, res) {
  const adminKey = req.headers['x-admin-key'];

  if (adminKey !== process.env.ADMIN_KEY) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  try {
    // REST API設定チェック
    if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {
      return res.status(500).json({
        error: 'KV REST API configuration missing'
      });
    }

    const today = new Date().toISOString().split('T')[0];

    const dailyCost = await getKVValue(`daily_cost:${today}`) || 0;
    const costLimit = parseFloat(process.env.DAILY_COST_LIMIT) || 10;

    if (parseFloat(dailyCost) > costLimit) {
      // 緊急停止フラグ設定
      await setKVValue(`emergency_stop:${today}`, '1', 86400);

      // アラート送信（実装は環境に応じて）
      console.error(`🚨 EMERGENCY STOP: Daily cost exceeded $${dailyCost}`);

      return res.json({
        status: 'STOPPED',
        reason: 'Daily cost limit exceeded',
        cost: parseFloat(dailyCost),
        limit: costLimit
      });
    }

    return res.json({
      status: 'OK',
      cost: parseFloat(dailyCost),
      limit: costLimit
    });

  } catch (error) {
    console.error('Emergency stop error:', error);
    return res.status(500).json({
      error: 'Emergency stop error',
      debug: error.message
    });
  }
}

// KV REST API ヘルパー関数
async function getKVValue(key) {
  try {
    const response = await fetch(`${process.env.KV_REST_API_URL}/get/${key}`, {
      headers: {
        'Authorization': `Bearer ${process.env.KV_REST_API_TOKEN}`,
      },
    });

    if (!response.ok) {
      if (response.status === 404) return null;
      throw new Error(`KV API error: ${response.status}`);
    }

    const data = await response.json();
    return data.result;
  } catch (error) {
    console.error('KV get error:', error);
    return null;
  }
}

async function setKVValue(key, value, ttl = null) {
  try {
    const body = ttl ? { key, value, ttl } : { key, value };

    const response = await fetch(`${process.env.KV_REST_API_URL}/set`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.KV_REST_API_TOKEN}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(body),
    });

    if (!response.ok) {
      throw new Error(`KV set error: ${response.status}`);
    }

    return await response.json();
  } catch (error) {
    console.error('KV set error:', error);
    throw error;
  }
}